import threading
from collections import OrderedDict
class Profile() :

   def __init__(self,name,score):
       self.name = name
       self.score = score


def set_name(self, profile_name):
    self.name = profile_name

def get_name(self):
    return self.name

def set_score(self,profile_score):
    self.score = profile_score


def get_score(self):
    return self.score


leaderboard = {
    'Justin': 3,
    'Nick': 2,
    'Marcus': 10

}
for k,v in leaderboard.items():
    print(k,v)

d_sorted_by_value = OrderedDict(sorted(leaderboard.items(), key = lambda t: t[1], reverse=True))
for k, v in d_sorted_by_value.items():
    print ("%s: %s" % (k,v))

